--
--	@(#) dbcreate/cfsec/mssql/crsp_delete_secuser.tsql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
use cfsec213
go

create proc sp_delete_secuser
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argSecUserId varchar(36),
	@argRevision int
as
	declare @oldRevision int
	declare @oldAuditCreatedAt datetime2
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt datetime2
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
	declare @clearsecuserdefdevSecUserId varchar(36)
	declare @clearsecuserdefdevDevName varchar(127)
	declare @deltsecgrpmembsTenantId decimal(21,0)
	declare @deltsecgrpmembsTSecGrpMembId decimal(21,0)
	declare @delsecgrpmembsClusterId decimal(21,0)
	declare @delsecgrpmembsSecGrpMembId decimal(21,0)
	declare @delsecsessionsSecSessionId varchar(36)
	declare @delsecproxysessionsSecSessionId varchar(36)
	declare @delsecdevicesSecUserId varchar(36)
	declare @delsecdevicesDevName varchar(127)
	declare cursClearSecUserDefDev cursor local for
		select
			a011.secuserid as secuserid
		from cfsec213..SecUser as a011
		where
			a011.secuserid = @argSecUserId
	declare cursDelTSecGrpMembs cursor local for
		select
			a018.tenantid,
			a018.tsecgrpmembid
		from cfsec213..SecUser as a011
			inner join cfsec213..tsecmemb a018 on
				a011.secuserid = a018.secuserid
		where
			a011.secuserid = @argSecUserId
	declare cursDelSecGrpMembs cursor local for
		select
			a00f.clusterid,
			a00f.secgrpmembid
		from cfsec213..SecUser as a011
			inner join cfsec213..secmemb a00f on
				a011.secuserid = a00f.secuserid
		where
			a011.secuserid = @argSecUserId
	declare cursDelSecSessions cursor local for
		select
			a010.secsessionid
		from cfsec213..SecUser as a011
			inner join cfsec213..secsess a010 on
				a011.secuserid = a010.secuserid
		where
			a011.secuserid = @argSecUserId
	declare cursDelSecProxySessions cursor local for
		select
			a010.secsessionid
		from cfsec213..SecUser as a011
			inner join cfsec213..secsess a010 on
				a011.secuserid = a010.secproxyid
		where
			a011.secuserid = @argSecUserId
	declare cursDelSecDevices cursor local for
		select
			a00a.secuserid,
			a00a.devname
		from cfsec213..SecUser as a011
			inner join cfsec213..secdev a00a on
				a011.secuserid = a00a.secuserid
		where
			a011.secuserid = @argSecUserId
begin
	update cfsec213..SecUser
	set forcesynclock = forcesynclock + 1
	where
			secuserid = @argSecUserId
	if @@rowcount != 1
	begin
		raiserror( 'Data collision detected -- primary key does not exist',
			15,
			1 )
	end

	select
		@oldRevision = a011.revision
	from cfsec213..SecUser as a011
	where
			a011.secuserid = @argSecUserId

	exec sp_is_system_user @permissionFlag output, @argAuditUserId
	if( @permissionFlag = 0 )
	begin
		raiserror( 'Permission denied -- only system user can delete SecUser records',
			10,
			1 )
	end

	insert into cfsec213..SecUser_h (
			secuserid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			login_id,
			email_addr,
			em_confuuid,
			defdevuserid,
			defdevname,
			pwd_hash,
			pwdrstuuid,
			revision,
			auditaction )
		select
			a011.secuserid,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			a011.login_id,
			a011.email_addr,
			a011.em_confuuid,
			a011.defdevuserid,
			a011.defdevname,
			a011.pwd_hash,
			a011.pwdrstuuid,
			@argRevision + 1,
			2
		from cfsec213..SecUser as a011
		where
			a011.secuserid = @argSecUserId

	open cursClearSecUserDefDev
	fetch next from cursClearSecUserDefDev into
			@clearsecuserdefdevSecUserId
	while ( @@fetch_status = 0 )
	begin
		update cfsec213..secuser
		set
			defdevuserid = null,
			defdevname = null
		where
			secuserid = @clearsecuserdefdevSecUserId

		fetch next from cursClearSecUserDefDev into
			@clearsecuserdefdevSecUserId
	end
	close cursClearSecUserDefDev
	deallocate cursClearSecUserDefDev

	update cfsec213..SecUser
	set
		secuserid = @argSecUserId,
		defdevuserid = null,
		defdevname = null
	where
		secuserid = @argSecUserId

	open cursDelTSecGrpMembs
	fetch next from cursDelTSecGrpMembs into
			@deltsecgrpmembsTenantId,
			@deltsecgrpmembsTSecGrpMembId
	while ( @@fetch_status = 0 )
	begin
		exec sp_delete_tsecmemb_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@deltsecgrpmembsTenantId,
			@deltsecgrpmembsTSecGrpMembId
		fetch next from cursDelTSecGrpMembs into
			@deltsecgrpmembsTenantId,
			@deltsecgrpmembsTSecGrpMembId
	end
	close cursDelTSecGrpMembs
	deallocate cursDelTSecGrpMembs

	open cursDelSecGrpMembs
	fetch next from cursDelSecGrpMembs into
			@delsecgrpmembsClusterId,
			@delsecgrpmembsSecGrpMembId
	while ( @@fetch_status = 0 )
	begin
		exec sp_delete_secmemb_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delsecgrpmembsClusterId,
			@delsecgrpmembsSecGrpMembId
		fetch next from cursDelSecGrpMembs into
			@delsecgrpmembsClusterId,
			@delsecgrpmembsSecGrpMembId
	end
	close cursDelSecGrpMembs
	deallocate cursDelSecGrpMembs

	open cursDelSecSessions
	fetch next from cursDelSecSessions into
			@delsecsessionsSecSessionId
	while ( @@fetch_status = 0 )
	begin
		exec sp_delete_secsess_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delsecsessionsSecSessionId
		fetch next from cursDelSecSessions into
			@delsecsessionsSecSessionId
	end
	close cursDelSecSessions
	deallocate cursDelSecSessions

	open cursDelSecProxySessions
	fetch next from cursDelSecProxySessions into
			@delsecproxysessionsSecSessionId
	while ( @@fetch_status = 0 )
	begin
		exec sp_delete_secsess_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delsecproxysessionsSecSessionId
		fetch next from cursDelSecProxySessions into
			@delsecproxysessionsSecSessionId
	end
	close cursDelSecProxySessions
	deallocate cursDelSecProxySessions

	open cursDelSecDevices
	fetch next from cursDelSecDevices into
			@delsecdevicesSecUserId,
			@delsecdevicesDevName
	while ( @@fetch_status = 0 )
	begin
		exec sp_delete_secdev_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delsecdevicesSecUserId,
			@delsecdevicesDevName
		fetch next from cursDelSecDevices into
			@delsecdevicesSecUserId,
			@delsecdevicesDevName
	end
	close cursDelSecDevices
	deallocate cursDelSecDevices

	delete from cfsec213..SecUser
	where
		secuserid = @argSecUserId
	if @@rowcount != 1
	begin
		raiserror( 'sp_delete_secuser() Data collision detected',
			15,
			1 )
	end

end
go

quit
