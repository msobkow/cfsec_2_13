--
--	@(#) dbcreate/cfsec/mssql/crsp_update_secform.tsql
--
--	com.github.msobkow.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	This file is part of MSS Code Factory.
--	
--	Licensed under the Apache License, Version 2.0 (the "License");
--	you may not use this file except in compliance with the License.
--	You may obtain a copy of the License at
--	
--	    http://www.apache.org/licenses/LICENSE-2.0
--	
--	Unless required by applicable law or agreed to in writing, software
--	distributed under the License is distributed on an "AS IS" BASIS,
--	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--	See the License for the specific language governing permissions and
--	limitations under the License.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--
--	Manufactured by MSS Code Factory 2.12
--

use cfsec213
go

create proc sp_update_secform
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode CFSec213ClassCode,
	@argClusterId decimal(21,0),
	@argSecFormId integer,
	@argSecAppId integer,
	@argJEEServletMapName varchar(192),
	@argRevision integer
as
	declare @oldRevision int
	declare @oldClusterId decimal(21,0)
	declare @oldAuditCreatedAt datetime2
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt datetime2
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
begin

	if( @argClassCode = 'a00b' )
	begin
		exec sp_is_cluster_user @permissionFlag output, @argClusterId, 'DeleteSecForm', @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- User not found in cluster SecGroup for UpdateSecForm',
				15,
				1 )
		end
	end

	update cfsec213..SecForm
	set forcesynclock = forcesynclock + 1
	where
			clusterid = @argClusterId
		and secformid = @argSecFormId
	if @@rowcount != 1
	begin
		raiserror( 'Data collision detected -- primary key does not exist',
			15,
			1 )
	end

	select
		@oldClusterId = a00b.clusterid,
		@oldRevision = a00b.revision
	from cfsec213..SecForm as a00b
	where
			a00b.clusterid = @argClusterId
			and a00b.secformid = @argSecFormId

	if @argRevision != @oldRevision
	begin
		raiserror( 'sp_update_secform() Data collision detected',
			15,
			1 )
	end


	if( @argClassCode = 'a00b' )
	begin
		if( @argClusterId != @oldClusterId )
		begin
			raiserror( 'Permission denied -- ClusterId cannot be updated for SecForm',
				15,
				1 )
		end
	end

	update cfsec213..SecForm
	set
		revision = @argRevision + 1,
		secappid = @argSecAppId,
		jeeservletmapname = @argJEEServletMapName
	where
		clusterid = @argClusterId
		and secformid = @argSecFormId
		and revision = @argRevision

	if @@rowcount != 1
	begin
		raiserror( 'sp_update_secform() Data collision detected',
			15,
			1 )
	end

	insert into cfsec213..SecForm_h (
			clusterid,
			secformid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			secappid,
			jeeservletmapname,
			revision,
			auditaction )
		select
			a00b.clusterid,
			a00b.secformid,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			a00b.secappid,
			a00b.jeeservletmapname,
			a00b.revision,
			1
		from cfsec213..SecForm as a00b
		where
			a00b.clusterid = @argClusterId
			and a00b.secformid = @argSecFormId

	select
			a00b.createdby,
			convert( varchar, a00b.createdat, 120 ) as createdat,
			a00b.updatedby,
			convert( varchar, a00b.updatedat, 120 ) as updatedat,
			a00b.clusterid as clusterid,
			a00b.secformid as secformid,
			a00b.secappid as secappid,
			a00b.jeeservletmapname as jeeservletmapname,
		a00b.revision as revision
	from cfsec213..SecForm as a00b
	where
		a00b.clusterid = @argClusterId
			and a00b.secformid = @argSecFormId
end
go


quit
