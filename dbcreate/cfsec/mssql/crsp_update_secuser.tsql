--
--	@(#) dbcreate/cfsec/mssql/crsp_update_secuser.tsql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--

use cfsec213
go

create proc sp_update_secuser
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode CFSec213ClassCode,
	@argSecUserId varchar(36),
	@argLoginId varchar(32),
	@argEMailAddress varchar(192),
	@argEMailConfirmUuid varchar(36),
	@argDfltDevUserId varchar(36),
	@argDfltDevName varchar(127),
	@argPasswordHash varchar(256),
	@argPasswordResetUuid varchar(36),
	@argRevision integer
as
	declare @oldRevision int
	declare @oldAuditCreatedAt datetime2
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt datetime2
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
begin

	if( @argClassCode = 'a011' )
	begin
		exec sp_is_system_user @permissionFlag output, @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- only system user can update SecUser records',
				15,
				1 )
		end
	end

	update cfsec213..SecUser
	set forcesynclock = forcesynclock + 1
	where
			secuserid = @argSecUserId
	if @@rowcount != 1
	begin
		raiserror( 'Data collision detected -- primary key does not exist',
			15,
			1 )
	end

	select
		@oldRevision = a011.revision
	from cfsec213..SecUser as a011
	where
			a011.secuserid = @argSecUserId

	if @argRevision != @oldRevision
	begin
		raiserror( 'sp_update_secuser() Data collision detected',
			15,
			1 )
	end


	update cfsec213..SecUser
	set
		revision = @argRevision + 1,
		login_id = @argLoginId,
		email_addr = @argEMailAddress,
		em_confuuid = @argEMailConfirmUuid,
		defdevuserid = @argDfltDevUserId,
		defdevname = @argDfltDevName,
		pwd_hash = @argPasswordHash,
		pwdrstuuid = @argPasswordResetUuid
	where
		secuserid = @argSecUserId
		and revision = @argRevision

	if @@rowcount != 1
	begin
		raiserror( 'sp_update_secuser() Data collision detected',
			15,
			1 )
	end

	insert into cfsec213..SecUser_h (
			secuserid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			login_id,
			email_addr,
			em_confuuid,
			defdevuserid,
			defdevname,
			pwd_hash,
			pwdrstuuid,
			revision,
			auditaction )
		select
			a011.secuserid,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			a011.login_id,
			a011.email_addr,
			a011.em_confuuid,
			a011.defdevuserid,
			a011.defdevname,
			a011.pwd_hash,
			a011.pwdrstuuid,
			a011.revision,
			1
		from cfsec213..SecUser as a011
		where
			a011.secuserid = @argSecUserId

	select
			a011.createdby,
			convert( varchar, a011.createdat, 120 ) as createdat,
			a011.updatedby,
			convert( varchar, a011.updatedat, 120 ) as updatedat,
			a011.secuserid as secuserid,
			a011.login_id as login_id,
			a011.email_addr as email_addr,
			a011.em_confuuid as em_confuuid,
			a011.defdevuserid as defdevuserid,
			a011.defdevname as defdevname,
			a011.pwd_hash as pwd_hash,
			a011.pwdrstuuid as pwdrstuuid,
		a011.revision as revision
	from cfsec213..SecUser as a011
	where
		a011.secuserid = @argSecUserId
end
go


quit
