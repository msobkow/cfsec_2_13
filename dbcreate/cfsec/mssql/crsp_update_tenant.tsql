--
--	@(#) dbcreate/cfsec/mssql/crsp_update_tenant.tsql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--

use cfsec213
go

create proc sp_update_tenant
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode CFSec213ClassCode,
	@argClusterId decimal(21,0),
	@argId decimal(21,0),
	@argTenantName varchar(192),
	@argRevision integer
as
	declare @oldRevision int
	declare @oldAuditCreatedAt datetime2
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt datetime2
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
begin

	if( @argClassCode = 'a015' )
	begin
		exec sp_is_system_user @permissionFlag output, @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- only system user can update Tenant records',
				15,
				1 )
		end
	end

	update cfsec213..tenant
	set forcesynclock = forcesynclock + 1
	where
			id = @argId
	if @@rowcount != 1
	begin
		raiserror( 'Data collision detected -- primary key does not exist',
			15,
			1 )
	end

	select
		@oldRevision = a015.revision
	from cfsec213..tenant as a015
	where
			a015.id = @argId

	if @argRevision != @oldRevision
	begin
		raiserror( 'sp_update_tenant() Data collision detected',
			15,
			1 )
	end


	update cfsec213..tenant
	set
		revision = @argRevision + 1,
		clusterid = @argClusterId,
		tenantname = @argTenantName
	where
		id = @argId
		and revision = @argRevision

	if @@rowcount != 1
	begin
		raiserror( 'sp_update_tenant() Data collision detected',
			15,
			1 )
	end

	insert into cfsec213..tenant_h (
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			clusterid,
			tenantname,
			revision,
			auditaction )
		select
			a015.id,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			a015.clusterid,
			a015.tenantname,
			a015.revision,
			1
		from cfsec213..tenant as a015
		where
			a015.id = @argId

	select
			a015.createdby,
			convert( varchar, a015.createdat, 120 ) as createdat,
			a015.updatedby,
			convert( varchar, a015.updatedat, 120 ) as updatedat,
			a015.clusterid as clusterid,
			a015.id as id,
			a015.tenantname as tenantname,
		a015.revision as revision
	from cfsec213..tenant as a015
	where
		a015.id = @argId
end
go


quit
