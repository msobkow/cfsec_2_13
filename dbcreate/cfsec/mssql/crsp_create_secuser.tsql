--
--	@(#) dbcreate/cfsec/mssql/crsp_create_secuser.tsql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	This file is part of MSS Code Factory.
--	
--	Licensed under the Apache License, Version 2.0 (the "License");
--	you may not use this file except in compliance with the License.
--	You may obtain a copy of the License at
--	
--	    http://www.apache.org/licenses/LICENSE-2.0
--	
--	Unless required by applicable law or agreed to in writing, software
--	distributed under the License is distributed on an "AS IS" BASIS,
--	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--	See the License for the specific language governing permissions and
--	limitations under the License.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--
--	Manufactured by MSS Code Factory 2.12
--
use cfsec213
go

create proc sp_create_secuser
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode CFSec213ClassCode,
	@argSecUserId varchar(36),
	@argLoginId varchar(32),
	@argEMailAddress varchar(192),
	@argEMailConfirmUuid varchar(36),
	@argDfltDevUserId varchar(36),
	@argDfltDevName varchar(127),
	@argPasswordHash varchar(256),
	@argPasswordResetUuid varchar(36)
as
	declare @rc int
	declare @permissionFlag int
begin
	if( @argClassCode = 'a011' )
	begin
		exec sp_is_system_user @permissionFlag output, @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- only system user can create SecUser records',
				15,
				1 )
		end
	end

	insert into cfsec213..SecUser(
			forcesynclock,
			createdby,
			createdat,
			updatedby,
			updatedat,
			secuserid,
			login_id,
			email_addr,
			em_confuuid,
			defdevuserid,
			defdevname,
			pwd_hash,
			pwdrstuuid,
			revision )
	values (
			0,
			@argAuditUserId,
			sysdatetime(),
			@argAuditUserId,
			sysdatetime(),
			@argSecUserId,
			@argLoginId,
			@argEMailAddress,
			@argEMailConfirmUuid,
			@argDfltDevUserId,
			@argDfltDevName,
			@argPasswordHash,
			@argPasswordResetUuid,
			1 )

	insert into cfsec213..SecUser_h (
			secuserid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			login_id,
			email_addr,
			em_confuuid,
			defdevuserid,
			defdevname,
			pwd_hash,
			pwdrstuuid,
			revision,
			auditaction )
		select
			a011.secuserid,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			a011.login_id,
			a011.email_addr,
			a011.em_confuuid,
			a011.defdevuserid,
			a011.defdevname,
			a011.pwd_hash,
			a011.pwdrstuuid,
			a011.revision,
			0
		from cfsec213..SecUser as a011
		where
			a011.secuserid = @argSecUserId

	select
			a011.createdby,
			convert( varchar, a011.createdat, 120 ) as createdat,
			a011.updatedby,
			convert( varchar, a011.updatedat, 120 ) as updatedat,
			a011.secuserid as secuserid,
			a011.login_id as login_id,
			a011.email_addr as email_addr,
			a011.em_confuuid as em_confuuid,
			a011.defdevuserid as defdevuserid,
			a011.defdevname as defdevname,
			a011.pwd_hash as pwd_hash,
			a011.pwdrstuuid as pwdrstuuid,
			a011.revision as revision
	from cfsec213..SecUser as a011
	where
			a011.secuserid = @argSecUserId
end
go

quit
