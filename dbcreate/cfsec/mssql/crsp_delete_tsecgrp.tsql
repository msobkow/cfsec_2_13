--
--	@(#) dbcreate/cfsec/mssql/crsp_delete_tsecgrp.tsql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
use cfsec213
go

create proc sp_delete_tsecgrp
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argTenantId decimal(21,0),
	@argTSecGroupId integer,
	@argRevision int
as
	declare @oldRevision int
	declare @oldTenantId decimal(21,0)
	declare @oldAuditCreatedAt datetime2
	declare @oldAuditCreatedBy varchar(36)
	declare @oldAuditUpdatedAt datetime2
	declare @oldAuditUpdatedBy varchar(36)
	declare @permissionFlag int
	declare @delincludedbygroupTenantId decimal(21,0)
	declare @delincludedbygroupTSecGrpIncId decimal(21,0)
	declare @delgrpmembsTenantId decimal(21,0)
	declare @delgrpmembsTSecGrpMembId decimal(21,0)
	declare @delgrpincsTenantId decimal(21,0)
	declare @delgrpincsTSecGrpIncId decimal(21,0)
	declare cursDelIncludedByGroup cursor local for
		select
			a017.tenantid,
			a017.tsecgrpincid
		from cfsec213..TSecGrp as a016
			inner join cfsec213..tsecinc a017 on
				a016.tenantid = a017.tenantid
				and a016.tsecgroupid = a017.incgrpid
		where
			a016.tenantid = @argTenantId
			and a016.tsecgroupid = @argTSecGroupId
	declare cursDelGrpMembs cursor local for
		select
			a018.tenantid,
			a018.tsecgrpmembid
		from cfsec213..TSecGrp as a016
			inner join cfsec213..tsecmemb a018 on
				a016.tenantid = a018.tenantid
				and a016.tsecgroupid = a018.tsecgroupid
		where
			a016.tenantid = @argTenantId
			and a016.tsecgroupid = @argTSecGroupId
	declare cursDelGrpIncs cursor local for
		select
			a017.tenantid,
			a017.tsecgrpincid
		from cfsec213..TSecGrp as a016
			inner join cfsec213..tsecinc a017 on
				a016.tenantid = a017.tenantid
				and a016.tsecgroupid = a017.tsecgrpid
		where
			a016.tenantid = @argTenantId
			and a016.tsecgroupid = @argTSecGroupId
begin
	update cfsec213..TSecGrp
	set forcesynclock = forcesynclock + 1
	where
			tenantid = @argTenantId
		and tsecgroupid = @argTSecGroupId
	if @@rowcount != 1
	begin
		raiserror( 'Data collision detected -- primary key does not exist',
			15,
			1 )
	end

	select
		@oldTenantId = a016.tenantid,
		@oldRevision = a016.revision
	from cfsec213..TSecGrp as a016
	where
			a016.tenantid = @argTenantId
			and a016.tsecgroupid = @argTSecGroupId

	exec sp_is_tenant_user @permissionFlag output, @secTenantId, 'DeleteTSecGroup', @argAuditUserId
	if( @permissionFlag = 0 )
	begin
		raiserror( 'Permission denied -- User not found in tenant TSecGroup for DeleteTSecGroup',
			15,
			1 )
	end

	insert into cfsec213..TSecGrp_h (
			tenantid,
			tsecgroupid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			safe_name,
			isvisible,
			revision,
			auditaction )
		select
			a016.tenantid,
			a016.tsecgroupid,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			a016.safe_name,
			a016.isvisible,
			@argRevision + 1,
			2
		from cfsec213..TSecGrp as a016
		where
			a016.tenantid = @argTenantId
			and a016.tsecgroupid = @argTSecGroupId

	open cursDelIncludedByGroup
	fetch next from cursDelIncludedByGroup into
			@delincludedbygroupTenantId,
			@delincludedbygroupTSecGrpIncId
	while ( @@fetch_status = 0 )
	begin
		exec sp_delete_tsecinc_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delincludedbygroupTenantId,
			@delincludedbygroupTSecGrpIncId
		fetch next from cursDelIncludedByGroup into
			@delincludedbygroupTenantId,
			@delincludedbygroupTSecGrpIncId
	end
	close cursDelIncludedByGroup
	deallocate cursDelIncludedByGroup

	open cursDelGrpMembs
	fetch next from cursDelGrpMembs into
			@delgrpmembsTenantId,
			@delgrpmembsTSecGrpMembId
	while ( @@fetch_status = 0 )
	begin
		exec sp_delete_tsecmemb_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delgrpmembsTenantId,
			@delgrpmembsTSecGrpMembId
		fetch next from cursDelGrpMembs into
			@delgrpmembsTenantId,
			@delgrpmembsTSecGrpMembId
	end
	close cursDelGrpMembs
	deallocate cursDelGrpMembs

	open cursDelGrpIncs
	fetch next from cursDelGrpIncs into
			@delgrpincsTenantId,
			@delgrpincsTSecGrpIncId
	while ( @@fetch_status = 0 )
	begin
		exec sp_delete_tsecinc_by_ididx @argAuditClusterId,
			@argAuditUserId,
			@argAuditSessionId,
			@secClusterId,
			@secTenantId,
			@delgrpincsTenantId,
			@delgrpincsTSecGrpIncId
		fetch next from cursDelGrpIncs into
			@delgrpincsTenantId,
			@delgrpincsTSecGrpIncId
	end
	close cursDelGrpIncs
	deallocate cursDelGrpIncs

	delete from cfsec213..TSecGrp
	where
		tenantid = @argTenantId
		and tsecgroupid = @argTSecGroupId
	if @@rowcount != 1
	begin
		raiserror( 'sp_delete_tsecgrp() Data collision detected',
			15,
			1 )
	end

end
go

quit
