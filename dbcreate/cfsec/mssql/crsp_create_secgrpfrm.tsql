--
--	@(#) dbcreate/cfsec/mssql/crsp_create_secgrpfrm.tsql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
use cfsec213
go

create proc sp_create_secgrpfrm
	@argAuditClusterId bigint,
	@argAuditUserId varchar(36),
	@argAuditSessionId varchar(36),
	@secClusterId bigint,
	@secTenantId bigint,
	@argClassCode CFSec213ClassCode,
	@argClusterId decimal(21,0),
	@argSecGroupId integer,
	@argSecAppId integer,
	@argSecFormId integer
as
	declare @rc int
	declare @permissionFlag int
	declare @argSecGroupFormId decimal(21,0)
begin
	if( @argClassCode = 'a00d' )
	begin
		exec sp_is_cluster_user @permissionFlag output, @argClusterId, 'CreateSecGroupForm', @argAuditUserId
		if( @permissionFlag = 0 )
		begin
			raiserror( 'Permission denied -- User not found in cluster SecGroup for CreateSecGroupForm',
				15,
				1 )
		end
	end

	exec sp_next_clus_secgroupformidgen @argSecGroupFormId output,
		@argClusterId

	insert into cfsec213..SecGrpFrm(
			forcesynclock,
			createdby,
			createdat,
			updatedby,
			updatedat,
			clusid,
			secgrpfrmid,
			secgrpid,
			secappid,
			secfrmid,
			revision )
	values (
			0,
			@argAuditUserId,
			sysdatetime(),
			@argAuditUserId,
			sysdatetime(),
			@argClusterId,
			@argSecGroupFormId,
			@argSecGroupId,
			@argSecAppId,
			@argSecFormId,
			1 )

	insert into cfsec213..SecGrpFrm_h (
			clusid,
			secgrpfrmid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			secgrpid,
			secappid,
			secfrmid,
			revision,
			auditaction )
		select
			a00d.clusid,
			a00d.secgrpfrmid,
			@argAuditClusterId,
			@argAuditSessionId,
			sysdatetime(),
			a00d.secgrpid,
			a00d.secappid,
			a00d.secfrmid,
			a00d.revision,
			0
		from cfsec213..SecGrpFrm as a00d
		where
			a00d.clusid = @argClusterId
			and a00d.secgrpfrmid = @argSecGroupFormId

	select
			a00d.createdby,
			convert( varchar, a00d.createdat, 120 ) as createdat,
			a00d.updatedby,
			convert( varchar, a00d.updatedat, 120 ) as updatedat,
			a00d.clusid as clusid,
			a00d.secgrpfrmid as secgrpfrmid,
			a00d.secgrpid as secgrpid,
			a00d.secappid as secappid,
			a00d.secfrmid as secfrmid,
			a00d.revision as revision
	from cfsec213..SecGrpFrm as a00d
	where
			a00d.clusid = @argClusterId
			and a00d.secgrpfrmid = @argSecGroupFormId
end
go

quit
