--
--	@(#) dbcreate/cfsec/mysql/crsp_delete_clus.mysql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	This file is part of MSS Code Factory.
--	
--	Licensed under the Apache License, Version 2.0 (the "License");
--	you may not use this file except in compliance with the License.
--	You may obtain a copy of the License at
--	
--	    http://www.apache.org/licenses/LICENSE-2.0
--	
--	Unless required by applicable law or agreed to in writing, software
--	distributed under the License is distributed on an "AS IS" BASIS,
--	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--	See the License for the specific language governing permissions and
--	limitations under the License.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfsec213.sp_delete_clus(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argId bigint,
	argRevision int )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldId bigint;
	declare oldFullDomName varchar(192);
	declare oldDescription varchar(128);
	declare oldRevision int;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare done int default false;
	declare delsecgroupformsClusterId bigint;
	declare delsecgroupformsSecGroupFormId bigint;
	declare delsecgrpincbygroupClusterId bigint;
	declare delsecgrpincbygroupSecGrpIncId bigint;
	declare delsecgrpmembsClusterId bigint;
	declare delsecgrpmembsSecGrpMembId bigint;
	declare delsecgrpincsClusterId bigint;
	declare delsecgrpincsSecGrpIncId bigint;
	declare delsecgroupsClusterId bigint;
	declare delsecgroupsSecGroupId integer;
	declare delsecappformsClusterId bigint;
	declare delsecappformsSecFormId integer;
	declare delsecappsClusterId bigint;
	declare delsecappsSecAppId integer;
	declare deltenantsId bigint;
	declare delhostnodesClusterId bigint;
	declare delhostnodesHostNodeId bigint;
	declare cur_delsecgroupforms cursor for
		select
			a00d.clusid,
			a00d.secgrpfrmid
		from cfsec213.clus as a001
			inner join cfsec213.SecGrp a00c on
				a001.id = a00c.clusterid
			inner join cfsec213.SecGrpFrm a00d on
				a00c.clusterid = a00d.clusid
				and a00c.secgroupid = a00d.secgrpid
		where
			a001.id = argId;
	declare cur_delsecgrpincbygroup cursor for
		select
			a00e.clusid,
			a00e.secgrpincid
		from cfsec213.clus as a001
			inner join cfsec213.SecGrp a00c on
				a001.id = a00c.clusterid
			inner join cfsec213.SecInc a00e on
				a00c.clusterid = a00e.clusid
				and a00c.secgroupid = a00e.incgrpid
		where
			a001.id = argId;
	declare cur_delsecgrpmembs cursor for
		select
			a00f.clusterid,
			a00f.secgrpmembid
		from cfsec213.clus as a001
			inner join cfsec213.SecGrp a00c on
				a001.id = a00c.clusterid
			inner join cfsec213.SecMemb a00f on
				a00c.clusterid = a00f.clusterid
				and a00c.secgroupid = a00f.secgroupid
		where
			a001.id = argId;
	declare cur_delsecgrpincs cursor for
		select
			a00e.clusid,
			a00e.secgrpincid
		from cfsec213.clus as a001
			inner join cfsec213.SecGrp a00c on
				a001.id = a00c.clusterid
			inner join cfsec213.SecInc a00e on
				a00c.clusterid = a00e.clusid
				and a00c.secgroupid = a00e.secgrpid
		where
			a001.id = argId;
	declare cur_delsecgroups cursor for
		select
			a00c.clusterid,
			a00c.secgroupid
		from cfsec213.clus as a001
			inner join cfsec213.SecGrp a00c on
				a001.id = a00c.clusterid
		where
			a001.id = argId;
	declare cur_delsecappforms cursor for
		select
			a00b.clusterid,
			a00b.secformid
		from cfsec213.clus as a001
			inner join cfsec213.SecApp a009 on
				a001.id = a009.clusterid
			inner join cfsec213.SecForm a00b on
				a009.clusterid = a00b.clusterid
				and a009.secappid = a00b.secappid
		where
			a001.id = argId;
	declare cur_delsecapps cursor for
		select
			a009.clusterid,
			a009.secappid
		from cfsec213.clus as a001
			inner join cfsec213.SecApp a009 on
				a001.id = a009.clusterid
		where
			a001.id = argId;
	declare cur_deltenants cursor for
		select
			a015.id
		from cfsec213.clus as a001
			inner join cfsec213.tenant a015 on
				a001.id = a015.clusterid
		where
			a001.id = argId;
	declare cur_delhostnodes cursor for
		select
			a002.clusterid,
			a002.hostnodeid
		from cfsec213.clus as a001
			inner join cfsec213.HostNode a002 on
				a001.id = a002.clusterid
		where
			a001.id = argId;
	declare continue handler for not found set done = true;
	select
			Id,
		FullDomName,
		Description,
			revision
	into
		oldId,
			oldFullDomName,
			oldDescription,
		oldRevision
	from cfsec213.clus
	where
		Id = argId
	for update;
	select cfsec213.sp_is_system_user( argAuditUserId ) into permissionFlag;

	if( permissionFlag = false )
	then
		signal sqlstate '45001'
		set message_text = 'sp_delete_clus() Permission denied, not identified as system',
			schema_name = 'cfsec213',
			table_name = 'clus';
	end if;

	insert into cfsec213.clus_h (
			id,
			auditclusterid,
			auditsessionid,
			auditstamp,
			fulldomname,
			description,
			revision,
			auditaction )
		select
			a001.id,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a001.fulldomname,
			a001.description,
			a001.revision + 1,
			3
		from cfsec213.clus as a001
		where
			a001.id = argId;

	set done = false;
	open cur_delsecgroupforms;
	read_loop_delsecgroupforms: loop
		fetch cur_delsecgroupforms into
			delsecgroupformsClusterId,
			delsecgroupformsSecGroupFormId;
		if done then
			leave read_loop_delsecgroupforms;
		end if;
		call cfsec213.sp_delete_secgrpfrm_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgroupformsClusterId,
			delsecgroupformsSecGroupFormId );
	end loop;
	close cur_delsecgroupforms;
	set done = false;
	open cur_delsecgrpincbygroup;
	read_loop_delsecgrpincbygroup: loop
		fetch cur_delsecgrpincbygroup into
			delsecgrpincbygroupClusterId,
			delsecgrpincbygroupSecGrpIncId;
		if done then
			leave read_loop_delsecgrpincbygroup;
		end if;
		call cfsec213.sp_delete_secinc_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgrpincbygroupClusterId,
			delsecgrpincbygroupSecGrpIncId );
	end loop;
	close cur_delsecgrpincbygroup;
	set done = false;
	open cur_delsecgrpmembs;
	read_loop_delsecgrpmembs: loop
		fetch cur_delsecgrpmembs into
			delsecgrpmembsClusterId,
			delsecgrpmembsSecGrpMembId;
		if done then
			leave read_loop_delsecgrpmembs;
		end if;
		call cfsec213.sp_delete_secmemb_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgrpmembsClusterId,
			delsecgrpmembsSecGrpMembId );
	end loop;
	close cur_delsecgrpmembs;
	set done = false;
	open cur_delsecgrpincs;
	read_loop_delsecgrpincs: loop
		fetch cur_delsecgrpincs into
			delsecgrpincsClusterId,
			delsecgrpincsSecGrpIncId;
		if done then
			leave read_loop_delsecgrpincs;
		end if;
		call cfsec213.sp_delete_secinc_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgrpincsClusterId,
			delsecgrpincsSecGrpIncId );
	end loop;
	close cur_delsecgrpincs;
	set done = false;
	open cur_delsecgroups;
	read_loop_delsecgroups: loop
		fetch cur_delsecgroups into
			delsecgroupsClusterId,
			delsecgroupsSecGroupId;
		if done then
			leave read_loop_delsecgroups;
		end if;
		call cfsec213.sp_delete_secgrp_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecgroupsClusterId,
			delsecgroupsSecGroupId );
	end loop;
	close cur_delsecgroups;
	set done = false;
	open cur_delsecappforms;
	read_loop_delsecappforms: loop
		fetch cur_delsecappforms into
			delsecappformsClusterId,
			delsecappformsSecFormId;
		if done then
			leave read_loop_delsecappforms;
		end if;
		call cfsec213.sp_delete_secform_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecappformsClusterId,
			delsecappformsSecFormId );
	end loop;
	close cur_delsecappforms;
	set done = false;
	open cur_delsecapps;
	read_loop_delsecapps: loop
		fetch cur_delsecapps into
			delsecappsClusterId,
			delsecappsSecAppId;
		if done then
			leave read_loop_delsecapps;
		end if;
		call cfsec213.sp_delete_secapp_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecappsClusterId,
			delsecappsSecAppId );
	end loop;
	close cur_delsecapps;
	set done = false;
	open cur_deltenants;
	read_loop_deltenants: loop
		fetch cur_deltenants into
			deltenantsId;
		if done then
			leave read_loop_deltenants;
		end if;
		call cfsec213.sp_delete_tenant_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			deltenantsId );
	end loop;
	close cur_deltenants;
	set done = false;
	open cur_delhostnodes;
	read_loop_delhostnodes: loop
		fetch cur_delhostnodes into
			delhostnodesClusterId,
			delhostnodesHostNodeId;
		if done then
			leave read_loop_delhostnodes;
		end if;
		call cfsec213.sp_delete_hostnode_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delhostnodesClusterId,
			delhostnodesHostNodeId );
	end loop;
	close cur_delhostnodes;
	delete from cfsec213.clus
	where
		id = argId;
	select row_count()
	into RowsAffected;

	if RowsAffected != 1 and RowsAffected != 0
	then
		signal sqlstate '45000'
		set message_text = 'sp_delete_clus() Expected to affect 1 clus',
			schema_name = 'cfsec213',
			table_name = 'clus';
	end if;

end;////
