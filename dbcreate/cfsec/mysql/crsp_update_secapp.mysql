--
--	@(#) dbcreate/cfsec/mysql/crsp_update_secapp.mysql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////

create procedure cfsec213.sp_update_secapp(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argClassCode varchar(4),
	argClusterId bigint,
	argSecAppId integer,
	argJEEMountName varchar(192),
	argRevision integer )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldClusterId bigint;
	declare oldSecAppId integer;
	declare oldJEEMountName varchar(192);
	declare oldRevision int;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	if( argClassCode = 'a009' )
	then
		select cfsec213.sp_is_cluster_user( argClusterId,
				'UpdateSecApp',
				argAuditUserId ),
			cfsec213.sp_is_system_user( argAuditUserId )
		into permissionFlag, isSystemUser;

		if( ( permissionFlag = false ) and ( isSystemUser = false ) )
		then
			signal sqlstate '45002'
			set message_text = 'sp_update_secapp() Permission denied, User not found in cluster SecGroup for UpdateSecApp access',
				schema_name = 'cfsec213',
				table_name = 'SecApp';
		end if;
	end if;

	select
			ClusterId,
		SecAppId,
		JEEMountName,
			revision
	into
		oldClusterId,
			oldSecAppId,
			oldJEEMountName,
		oldRevision
	from cfsec213.SecApp
	where
		ClusterId = argClusterId
		and SecAppId = argSecAppId
	for update;
	if argRevision != oldRevision
	then
		signal sqlstate '45000'
		set message_text = 'sp_update_secapp() Data collision detected',
			schema_name = 'cfsec213',
			table_name = 'SecApp';
	end if;

	update cfsec213.SecApp
	set
		revision = argRevision + 1,
		updatedby = argAuditUserId,
		updatedat = now(),
		jeemountname = argJEEMountName
	where
		ClusterId = argClusterId
		and SecAppId = argSecAppId
		and revision = oldRevision;

	select row_count()
	into RowsAffected;
	if RowsAffected != 1
	then
		signal sqlstate '02003'
		set message_text = 'sp_update_secapp() Expected to affect 1 SecApp',
			schema_name = 'cfsec213',
			table_name = 'SecApp';
	end if;


	insert into cfsec213.SecApp_h (
			clusterid,
			secappid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			jeemountname,
			revision,
			auditaction )
		select
			a009.clusterid,
			a009.secappid,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a009.jeemountname,
			a009.revision,
			2
		from cfsec213.SecApp as a009
		where
			a009.clusterid = argClusterId
		and a009.secappid = argSecAppId;

	select

			date_format( a009.createdat, '%Y-%m-%d %H:%i:%S' ) as createdat,
			a009.createdby as createdby,
			date_format( a009.updatedat, '%Y-%m-%d %H:%i:%S' ) as updatedat,
			a009.updatedby as updatedby,
			a009.clusterid as clusterid,
			a009.secappid as secappid,
			a009.jeemountname as jeemountname,
		a009.revision as revision
	from cfsec213.SecApp as a009
	where
		a009.clusterid = argClusterId
		and a009.secappid = argSecAppId;
end;////

