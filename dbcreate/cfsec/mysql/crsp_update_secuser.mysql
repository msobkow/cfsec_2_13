--
--	@(#) dbcreate/cfsec/mysql/crsp_update_secuser.mysql
--
--	com.github.msobkow.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	This file is part of MSS Code Factory.
--	
--	Licensed under the Apache License, Version 2.0 (the "License");
--	you may not use this file except in compliance with the License.
--	You may obtain a copy of the License at
--	
--	    http://www.apache.org/licenses/LICENSE-2.0
--	
--	Unless required by applicable law or agreed to in writing, software
--	distributed under the License is distributed on an "AS IS" BASIS,
--	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--	See the License for the specific language governing permissions and
--	limitations under the License.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////

create procedure cfsec213.sp_update_secuser(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argClassCode varchar(4),
	argSecUserId varchar(36),
	argLoginId varchar(32),
	argEMailAddress varchar(192),
	argEMailConfirmUuid varchar(36),
	argDfltDevUserId varchar(36),
	argDfltDevName varchar(127),
	argPasswordHash varchar(256),
	argPasswordResetUuid varchar(36),
	argRevision integer )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldSecUserId varchar(36);
	declare oldLoginId varchar(32);
	declare oldEMailAddress varchar(192);
	declare oldEMailConfirmUuid varchar(36);
	declare oldDfltDevUserId varchar(36);
	declare oldDfltDevName varchar(127);
	declare oldPasswordHash varchar(256);
	declare oldPasswordResetUuid varchar(36);
	declare oldRevision int;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	if( argClassCode = 'a011' )
	then
		select cfsec213.sp_is_system_user( argAuditUserId ) into permissionFlag;
		if( permissionFlag = false )
		then
			signal sqlstate '45001'
			set message_text = 'sp_update_secuser() Permission denied, not identified as system',
				schema_name = 'cfsec213',
				table_name = 'SecUser';
		end if;
	end if;

	select
			SecUserId,
		login_id,
		email_addr,
		em_confuuid,
		DefDevUserId,
		DefDevName,
		pwd_hash,
		pwdrstuuid,
			revision
	into
		oldSecUserId,
			oldLoginId,
			oldEMailAddress,
			oldEMailConfirmUuid,
			oldDfltDevUserId,
			oldDfltDevName,
			oldPasswordHash,
			oldPasswordResetUuid,
		oldRevision
	from cfsec213.SecUser
	where
		SecUserId = argSecUserId
	for update;
	if argRevision != oldRevision
	then
		signal sqlstate '45000'
		set message_text = 'sp_update_secuser() Data collision detected',
			schema_name = 'cfsec213',
			table_name = 'SecUser';
	end if;

	update cfsec213.SecUser
	set
		revision = argRevision + 1,
		updatedby = argAuditUserId,
		updatedat = now(),
		login_id = argLoginId,
		email_addr = argEMailAddress,
		em_confuuid = argEMailConfirmUuid,
		defdevuserid = argDfltDevUserId,
		defdevname = argDfltDevName,
		pwd_hash = argPasswordHash,
		pwdrstuuid = argPasswordResetUuid
	where
		SecUserId = argSecUserId
		and revision = oldRevision;

	select row_count()
	into RowsAffected;
	if RowsAffected != 1
	then
		signal sqlstate '02003'
		set message_text = 'sp_update_secuser() Expected to affect 1 SecUser',
			schema_name = 'cfsec213',
			table_name = 'SecUser';
	end if;


	insert into cfsec213.SecUser_h (
			secuserid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			login_id,
			email_addr,
			em_confuuid,
			defdevuserid,
			defdevname,
			pwd_hash,
			pwdrstuuid,
			revision,
			auditaction )
		select
			a011.secuserid,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a011.login_id,
			a011.email_addr,
			a011.em_confuuid,
			a011.defdevuserid,
			a011.defdevname,
			a011.pwd_hash,
			a011.pwdrstuuid,
			a011.revision,
			2
		from cfsec213.SecUser as a011
		where
			a011.secuserid = argSecUserId;

	select

			date_format( a011.createdat, '%Y-%m-%d %H:%i:%S' ) as createdat,
			a011.createdby as createdby,
			date_format( a011.updatedat, '%Y-%m-%d %H:%i:%S' ) as updatedat,
			a011.updatedby as updatedby,
			a011.secuserid as secuserid,
			a011.login_id as login_id,
			a011.email_addr as email_addr,
			a011.em_confuuid as em_confuuid,
			a011.defdevuserid as defdevuserid,
			a011.defdevname as defdevname,
			a011.pwd_hash as pwd_hash,
			a011.pwdrstuuid as pwdrstuuid,
		a011.revision as revision
	from cfsec213.SecUser as a011
	where
		a011.secuserid = argSecUserId;
end;////

