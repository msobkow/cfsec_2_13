--
--	@(#) dbcreate/cfsec/mysql/crsp_delete_secgrpfrm.mysql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfsec213.sp_delete_secgrpfrm(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argClusterId bigint,
	argSecGroupFormId bigint,
	argRevision int )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldClusterId bigint;
	declare oldSecGroupFormId bigint;
	declare oldSecGroupId integer;
	declare oldSecAppId integer;
	declare oldSecFormId integer;
	declare oldRevision int;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare done int default false;
	declare continue handler for not found set done = true;
	select
			ClusId,
		SecGrpFrmId,
		SecGrpId,
		SecAppId,
		SecFrmId,
			revision
	into
		oldClusterId,
			oldSecGroupFormId,
			oldSecGroupId,
			oldSecAppId,
			oldSecFormId,
		oldRevision
	from cfsec213.SecGrpFrm
	where
		ClusId = argClusterId
		and SecGrpFrmId = argSecGroupFormId
	for update;
	if( oldClusterId != secClusterId )
	then
		select cfsec213.sp_is_system_user( argAuditUserId )

		into permissionFlag;
		if( permissionFlag = false )
		then
			signal sqlstate '45001'
			set message_text = 'sp_delete_secgrpfrm() Permission denied, not identified as system',
				schema_name = 'cfsec213',
				table_name = 'SecGrpFrm';
		end if;
	end if;

	select cfsec213.sp_is_cluster_user( oldClusterId,
			'DeleteSecGroupForm',
			argAuditUserId ),
		cfsec213.sp_is_system_user( argAuditUserId )
	into permissionFlag, isSystemUser;

	if( ( permissionFlag = false ) and ( isSystemUser = false ) )
	then
		signal sqlstate '45002'
		set message_text = 'sp_delete_secgrpfrm() Permission denied, not granted access to DeleteSecGroupForm for current Cluster',
			schema_name = 'cfsec213',
			table_name = 'SecGrpFrm';
	end if;

	insert into cfsec213.SecGrpFrm_h (
			clusid,
			secgrpfrmid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			secgrpid,
			secappid,
			secfrmid,
			revision,
			auditaction )
		select
			a00d.clusid,
			a00d.secgrpfrmid,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a00d.secgrpid,
			a00d.secappid,
			a00d.secfrmid,
			a00d.revision + 1,
			3
		from cfsec213.SecGrpFrm as a00d
		where
			a00d.clusid = argClusterId
		and a00d.secgrpfrmid = argSecGroupFormId;

	delete from cfsec213.SecGrpFrm
	where
		clusid = argClusterId
		and secgrpfrmid = argSecGroupFormId;
	select row_count()
	into RowsAffected;

	if RowsAffected != 1 and RowsAffected != 0
	then
		signal sqlstate '45000'
		set message_text = 'sp_delete_secgrpfrm() Expected to affect 1 SecGrpFrm',
			schema_name = 'cfsec213',
			table_name = 'SecGrpFrm';
	end if;

end;////
