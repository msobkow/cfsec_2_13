--
--	@(#) dbcreate/cfsec/mysql/crsp_delete_tsecgrp.mysql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	This file is part of MSS Code Factory.
--	
--	Licensed under the Apache License, Version 2.0 (the "License");
--	you may not use this file except in compliance with the License.
--	You may obtain a copy of the License at
--	
--	    http://www.apache.org/licenses/LICENSE-2.0
--	
--	Unless required by applicable law or agreed to in writing, software
--	distributed under the License is distributed on an "AS IS" BASIS,
--	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--	See the License for the specific language governing permissions and
--	limitations under the License.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfsec213.sp_delete_tsecgrp(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argTenantId bigint,
	argTSecGroupId integer,
	argRevision int )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldTenantId bigint;
	declare oldTSecGroupId integer;
	declare oldName varchar(64);
	declare oldIsVisible boolean;
	declare oldRevision int;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare done int default false;
	declare delincludedbygroupTenantId bigint;
	declare delincludedbygroupTSecGrpIncId bigint;
	declare delgrpmembsTenantId bigint;
	declare delgrpmembsTSecGrpMembId bigint;
	declare delgrpincsTenantId bigint;
	declare delgrpincsTSecGrpIncId bigint;
	declare cur_delincludedbygroup cursor for
		select
			a017.tenantid,
			a017.tsecgrpincid
		from cfsec213.TSecGrp as a016
			inner join cfsec213.TSecInc a017 on
				a016.tenantid = a017.tenantid
				and a016.tsecgroupid = a017.incgrpid
		where
			a016.tenantid = argTenantId
			and a016.tsecgroupid = argTSecGroupId;
	declare cur_delgrpmembs cursor for
		select
			a018.tenantid,
			a018.tsecgrpmembid
		from cfsec213.TSecGrp as a016
			inner join cfsec213.TSecMemb a018 on
				a016.tenantid = a018.tenantid
				and a016.tsecgroupid = a018.tsecgroupid
		where
			a016.tenantid = argTenantId
			and a016.tsecgroupid = argTSecGroupId;
	declare cur_delgrpincs cursor for
		select
			a017.tenantid,
			a017.tsecgrpincid
		from cfsec213.TSecGrp as a016
			inner join cfsec213.TSecInc a017 on
				a016.tenantid = a017.tenantid
				and a016.tsecgroupid = a017.tsecgrpid
		where
			a016.tenantid = argTenantId
			and a016.tsecgroupid = argTSecGroupId;
	declare continue handler for not found set done = true;
	select
			TenantId,
		TSecGroupId,
		safe_name,
		IsVisible,
			revision
	into
		oldTenantId,
			oldTSecGroupId,
			oldName,
			oldIsVisible,
		oldRevision
	from cfsec213.TSecGrp
	where
		TenantId = argTenantId
		and TSecGroupId = argTSecGroupId
	for update;
	if( oldTenantId != secTenantId )
	then
		select cfsec213.sp_is_system_user( argAuditUserId )
		into permissionFlag;

		if( permissionFlag = false )
		then
			signal sqlstate '45001'
			set message_text = 'sp_delete_tsecgrp() Permission denied, not identified as system',
				schema_name = 'cfsec213',
				table_name = 'TSecGrp';
		end if;
	end if;

	select cfsec213.sp_is_tenant_user( oldTenantId,
			'DeleteTSecGroup',
			argAuditUserId ),
		cfsec213.sp_is_system_user( argAuditUserId )
	into permissionFlag, isSystemUser;

	if( ( permissionFlag = false ) and ( isSystemUser = false ) )
	then
		signal sqlstate '45003'
		set message_text = 'sp_delete_tsecgrp() Permission denied, not granted access to DeleteTSecGroup for current Tenant',
			schema_name = 'cfsec213',
			table_name = 'TSecGrp';
	end if;

	insert into cfsec213.TSecGrp_h (
			tenantid,
			tsecgroupid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			safe_name,
			isvisible,
			revision,
			auditaction )
		select
			a016.tenantid,
			a016.tsecgroupid,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a016.safe_name,
			a016.isvisible,
			a016.revision + 1,
			3
		from cfsec213.TSecGrp as a016
		where
			a016.tenantid = argTenantId
		and a016.tsecgroupid = argTSecGroupId;

	set done = false;
	open cur_delincludedbygroup;
	read_loop_delincludedbygroup: loop
		fetch cur_delincludedbygroup into
			delincludedbygroupTenantId,
			delincludedbygroupTSecGrpIncId;
		if done then
			leave read_loop_delincludedbygroup;
		end if;
		call cfsec213.sp_delete_tsecinc_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delincludedbygroupTenantId,
			delincludedbygroupTSecGrpIncId );
	end loop;
	close cur_delincludedbygroup;
	set done = false;
	open cur_delgrpmembs;
	read_loop_delgrpmembs: loop
		fetch cur_delgrpmembs into
			delgrpmembsTenantId,
			delgrpmembsTSecGrpMembId;
		if done then
			leave read_loop_delgrpmembs;
		end if;
		call cfsec213.sp_delete_tsecmemb_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delgrpmembsTenantId,
			delgrpmembsTSecGrpMembId );
	end loop;
	close cur_delgrpmembs;
	set done = false;
	open cur_delgrpincs;
	read_loop_delgrpincs: loop
		fetch cur_delgrpincs into
			delgrpincsTenantId,
			delgrpincsTSecGrpIncId;
		if done then
			leave read_loop_delgrpincs;
		end if;
		call cfsec213.sp_delete_tsecinc_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delgrpincsTenantId,
			delgrpincsTSecGrpIncId );
	end loop;
	close cur_delgrpincs;
	delete from cfsec213.TSecGrp
	where
		tenantid = argTenantId
		and tsecgroupid = argTSecGroupId;
	select row_count()
	into RowsAffected;

	if RowsAffected != 1 and RowsAffected != 0
	then
		signal sqlstate '45000'
		set message_text = 'sp_delete_tsecgrp() Expected to affect 1 TSecGrp',
			schema_name = 'cfsec213',
			table_name = 'TSecGrp';
	end if;

end;////
