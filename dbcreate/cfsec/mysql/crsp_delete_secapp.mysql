--
--	@(#) dbcreate/cfsec/mysql/crsp_delete_secapp.mysql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfsec213.sp_delete_secapp(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argClusterId bigint,
	argSecAppId integer,
	argRevision int )
not deterministic
modifies sql data
begin
	declare RowsAffected bigint;
	declare oldClusterId bigint;
	declare oldSecAppId integer;
	declare oldJEEMountName varchar(192);
	declare oldRevision int;
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare done int default false;
	declare delsecappformsClusterId bigint;
	declare delsecappformsSecFormId integer;
	declare cur_delsecappforms cursor for
		select
			a00b.clusterid,
			a00b.secformid
		from cfsec213.SecApp as a009
			inner join cfsec213.SecForm a00b on
				a009.clusterid = a00b.clusterid
				and a009.secappid = a00b.secappid
		where
			a009.clusterid = argClusterId
			and a009.secappid = argSecAppId;
	declare continue handler for not found set done = true;
	select
			ClusterId,
		SecAppId,
		JEEMountName,
			revision
	into
		oldClusterId,
			oldSecAppId,
			oldJEEMountName,
		oldRevision
	from cfsec213.SecApp
	where
		ClusterId = argClusterId
		and SecAppId = argSecAppId
	for update;
	if( oldClusterId != secClusterId )
	then
		select cfsec213.sp_is_system_user( argAuditUserId )

		into permissionFlag;
		if( permissionFlag = false )
		then
			signal sqlstate '45001'
			set message_text = 'sp_delete_secapp() Permission denied, not identified as system',
				schema_name = 'cfsec213',
				table_name = 'SecApp';
		end if;
	end if;

	select cfsec213.sp_is_cluster_user( oldClusterId,
			'DeleteSecApp',
			argAuditUserId ),
		cfsec213.sp_is_system_user( argAuditUserId )
	into permissionFlag, isSystemUser;

	if( ( permissionFlag = false ) and ( isSystemUser = false ) )
	then
		signal sqlstate '45002'
		set message_text = 'sp_delete_secapp() Permission denied, not granted access to DeleteSecApp for current Cluster',
			schema_name = 'cfsec213',
			table_name = 'SecApp';
	end if;

	insert into cfsec213.SecApp_h (
			clusterid,
			secappid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			jeemountname,
			revision,
			auditaction )
		select
			a009.clusterid,
			a009.secappid,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a009.jeemountname,
			a009.revision + 1,
			3
		from cfsec213.SecApp as a009
		where
			a009.clusterid = argClusterId
		and a009.secappid = argSecAppId;

	set done = false;
	open cur_delsecappforms;
	read_loop_delsecappforms: loop
		fetch cur_delsecappforms into
			delsecappformsClusterId,
			delsecappformsSecFormId;
		if done then
			leave read_loop_delsecappforms;
		end if;
		call cfsec213.sp_delete_secform_by_ididx( argAuditClusterId,
			argAuditUserId,
			argAuditSessionId,
			secClusterId,
			secTenantId,
			delsecappformsClusterId,
			delsecappformsSecFormId );
	end loop;
	close cur_delsecappforms;
	delete from cfsec213.SecApp
	where
		clusterid = argClusterId
		and secappid = argSecAppId;
	select row_count()
	into RowsAffected;

	if RowsAffected != 1 and RowsAffected != 0
	then
		signal sqlstate '45000'
		set message_text = 'sp_delete_secapp() Expected to affect 1 SecApp',
			schema_name = 'cfsec213',
			table_name = 'SecApp';
	end if;

end;////
