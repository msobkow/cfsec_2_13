--
--	@(#) dbcreate/cfsec/mysql/crsp_delete_secuser_by_defdevidx.mysql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfsec213.sp_delete_secuser_by_defdevidx(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argDfltDevUserId varchar(36),
	argDfltDevName varchar(127) )
not deterministic
modifies sql data
begin
	declare curRevision int;
	declare subret boolean;
	declare curSecUserId varchar(36);
	declare done int default false;
	declare cur_defdevidx cursor for
		select
			a011.secuserid as secuserid,
			a011.revision as revision
		from cfsec213.SecUser as a011
		where
			( ( ( argDfltDevUserId is null ) and ( a011.defdevuserid is null ) )
				or ( ( argDfltDevUserId is not null ) and ( a011.defdevuserid = argDfltDevUserId ) ) )
		and ( ( ( argDfltDevName is null ) and ( a011.defdevname is null ) )
				or ( ( argDfltDevName is not null ) and ( a011.defdevname = argDfltDevName ) ) );
	declare cur_defdevidx_normal cursor for
		select
			a011.secuserid as secuserid,
				a011.revision as revision
		from cfsec213.SecUser as a011
		where
				( ( ( argDfltDevUserId is null ) and ( a011.defdevuserid is null ) )
				or ( ( argDfltDevUserId is not null ) and ( a011.defdevuserid = argDfltDevUserId ) ) )
		and ( ( ( argDfltDevName is null ) and ( a011.defdevname is null ) )
				or ( ( argDfltDevName is not null ) and ( a011.defdevname = argDfltDevName ) ) );
	declare continue handler for not found set done = true;

	open cur_defdevidx_normal;
	read_loop_defdevidx_normal: loop
		fetch cur_defdevidx_normal into
				curSecUserId,
				curRevision;
		if done then
			leave read_loop_defdevidx_normal;
		end if;
			call cfsec213.sp_delete_secuser( argAuditClusterId,
						argAuditUserId,
						argAuditSessionId,
						secClusterId,
						secTenantId,
						curSecUserId,
						curRevision );
	end loop;
	close cur_defdevidx_normal;
end;////
