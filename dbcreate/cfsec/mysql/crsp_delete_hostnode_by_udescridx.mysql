--
--	@(#) dbcreate/cfsec/mysql/crsp_delete_hostnode_by_udescridx.mysql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfsec213.sp_delete_hostnode_by_udescridx(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argClusterId bigint,
	argDescription varchar(255) )
not deterministic
modifies sql data
begin
	declare curRevision int;
	declare subret boolean;
	declare curClusterId bigint;
	declare curHostNodeId bigint;
	declare done int default false;
	declare cur_udescridx cursor for
		select
			a002.clusterid as clusterid,
			a002.hostnodeid as hostnodeid,
			a002.revision as revision
		from cfsec213.HostNode as a002
		where
			a002.clusterid = argClusterId
		and a002.description = argDescription;
	declare cur_udescridx_system cursor for
			select
			a002.clusterid as clusterid,
			a002.hostnodeid as hostnodeid,
					a002.revision as revision
			from cfsec213.HostNode as a002
			where
					a002.clusterid = argClusterId
		and a002.description = argDescription;
	declare cur_udescridx_restricted cursor for
			select
			a002.clusterid as clusterid,
			a002.hostnodeid as hostnodeid,
					a002.revision as revision
			from cfsec213.HostNode as a002
			where
					a002.clusterid = argClusterId
		and a002.description = argDescription
					and a002.ClusterId = secClusterId;
	declare continue handler for not found set done = true;

	select cfsec213.sp_is_system_user( argAuditUserId ) into subret;
	if( subret )
	then
		open cur_udescridx_system;
		read_loop_udescridx_system: loop
			fetch cur_udescridx_system into
				curClusterId,
				curHostNodeId,
				curRevision;
			if done then
				leave read_loop_udescridx_system;
			end if;
			call cfsec213.sp_delete_hostnode( argAuditClusterId,
						argAuditUserId,
						argAuditSessionId,
						secClusterId,
						secTenantId,
						curClusterId,
						curHostNodeId,
						curRevision );
		end loop;
		close cur_udescridx_system;
	else
		open cur_udescridx_restricted;
		read_loop_udescridx_restricted: loop
			fetch cur_udescridx_restricted into
				curClusterId,
				curHostNodeId,
				curRevision;
			if done then
				leave read_loop_udescridx_restricted;
			end if;
			call cfsec213.sp_delete_hostnode( argAuditClusterId,
						argAuditUserId,
						argAuditSessionId,
						secClusterId,
						secTenantId,
						curClusterId,
						curHostNodeId,
						curRevision );
		end loop;
		close cur_udescridx_restricted;
	end if;
end;////
