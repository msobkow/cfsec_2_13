--
--	@(#) dbcreate/cfsec/mysql/crsp_create_secgrpfrm.mysql
--
--	org.msscf.msscf.CFSec
--
--	Copyright (c) 2020 Mark Stephen Sobkow
--	
--	MSS Code Factory CFSec 2.13 Security Essentials
--	
--	Copyright 2020 Mark Stephen Sobkow
--	
--		This file is part of MSS Code Factory.
--	
--		MSS Code Factory is available under dual commercial license from Mark Stephen
--		Sobkow, or under the terms of the GNU General Public License, Version 3
--		or later.
--	
--	    MSS Code Factory is free software: you can redistribute it and/or modify
--	    it under the terms of the GNU General Public License as published by
--	    the Free Software Foundation, either version 3 of the License, or
--	    (at your option) any later version.
--	
--	    MSS Code Factory is distributed in the hope that it will be useful,
--	    but WITHOUT ANY WARRANTY; without even the implied warranty of
--	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--	    GNU General Public License for more details.
--	
--	    You should have received a copy of the GNU General Public License
--	    along with MSS Code Factory.  If not, see <https://www.gnu.org/licenses/>.
--	
--	Donations to support MSS Code Factory can be made at
--	https://www.paypal.com/paypalme2/MarkSobkow
--	
--	Please contact Mark Stephen Sobkow at msobkow@sasktel.net for commercial licensing.
--
--	Manufactured by MSS Code Factory 2.12
--
delimiter ////
create procedure cfsec213.sp_create_secgrpfrm(
	argAuditClusterId bigint,
	argAuditUserId varchar(36),
	argAuditSessionId varchar(36),
	secClusterId bigint,
	secTenantId bigint,
	argClassCode varchar(4),
	argClusterId bigint,
	argSecGroupId integer,
	argSecAppId integer,
	argSecFormId integer )
not deterministic
modifies sql data
begin
	declare permissionFlag boolean;
	declare isSystemUser boolean;
	declare argSecGroupFormId bigint;
	if( argClassCode = 'a00d' )
	then
		select cfsec213.sp_is_cluster_user( argClusterId,
				'CreateSecGroupForm',
				argAuditUserId ),
			cfsec213.sp_is_system_user( argAuditUserId )
		into permissionFlag, isSystemUser;

		if( ( permissionFlag = false ) and ( isSystemUser = false ) )
		then
			signal sqlstate '45002'
			set message_text = 'sp_create_secgrpfrm() Permission denied, not granted access to current cluster',
				schema_name = 'cfsec213',
				table_name = 'SecGrpFrm';
		end if;
	end if;

	select cfsec213.sp_next_secgroupformidgen( argClusterId )
	into argSecGroupFormId;

	insert into cfsec213.SecGrpFrm(
		createdby,
		createdat,
		updatedby,
		updatedat,
		clusid,
		secgrpfrmid,
		secgrpid,
		secappid,
		secfrmid,
		revision )
	values (
		argAuditUserId,
		now(),
		argAuditUserId,
		now(),
		argClusterId,
		argSecGroupFormId,
		argSecGroupId,
		argSecAppId,
		argSecFormId,
		1 );

	insert into cfsec213.SecGrpFrm_h (
			clusid,
			secgrpfrmid,
			auditclusterid,
			auditsessionid,
			auditstamp,
			secgrpid,
			secappid,
			secfrmid,
			revision,
			auditaction )
		select
			a00d.clusid,
			a00d.secgrpfrmid,
			argAuditClusterId,
			argAuditSessionId,
			now(),
			a00d.secgrpid,
			a00d.secappid,
			a00d.secfrmid,
			a00d.revision,
			1
		from cfsec213.SecGrpFrm as a00d
		where
			a00d.clusid = argClusterId
		and a00d.secgrpfrmid = argSecGroupFormId;

	select

			date_format( a00d.createdat, '%Y-%m-%d %H:%i:%S' ) as createdat,
			a00d.createdby as createdby,
			date_format( a00d.updatedat, '%Y-%m-%d %H:%i:%S' ) as updatedat,
			a00d.updatedby as updatedby,
			a00d.clusid as clusid,
			a00d.secgrpfrmid as secgrpfrmid,
			a00d.secgrpid as secgrpid,
			a00d.secappid as secappid,
			a00d.secfrmid as secfrmid,
			a00d.revision as revision
	from cfsec213.SecGrpFrm as a00d
	where
		a00d.clusid = argClusterId
		and a00d.secgrpfrmid = argSecGroupFormId;
end;////
